{"version":3,"sources":["assets/profile_pic.png","_constants/index.js","_reducers/index.js","_store/index.js","_store/persist/index.js","_services/api/requests.js","_actions/index.js","components/form/Login.js","components/Navbar.js","components/message/alert.js","pages/public/Login.js","components/list/GetNews.js","components/list/Content.js","pages/private/Main.js","components/form/Profile.js","pages/private/Profile.js","pages/private/Story.js","routes/private.js","routes/index.js","serviceWorker.js","index.js"],"names":["module","exports","authTypes","LOGIN_AUTHENTICATED","LOGIN_REQUEST","LOGIN_ERROR","LOG_OUT","newsTypes","GET_TOP_HEADLINES_BY_COUNTRY","GET_EVERYTHING","GET_STORY","GET_PROFILE","UPDATE_PROFILE","alertType","ALERT_ERROR_SHOW","ALERT_ERROR_REMOVE","rootReducer","state","action","type","token","error","headlines","payload","story","user","undefined","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","serializedState","localStorage","getItem","JSON","parse","e","console","log","loadFromLocalStorage","applyMiddleware","thunk","subscribe","stringify","setItem","saveToLocalStorage","getState","axios","defaults","baseURL","apiRequestService","getTopHeadlines","countryAbbreviation","get","then","response","data","getEverything","request","logout","clear","login","loginDetails","dispatch","message","getUserProfile","err","getAlertError","getStory","loginDetailsToken","catch","LoginFormComponent","create","name","props","getFieldDecorator","form","Title","className","level","Item","rules","required","placeholder","onClick","preventDefault","validateFields","values","href","rel","target","connect","Header","Search","style","backgroundColor","borderBottom","display","justifyContent","to","color","theme","mode","defaultSelectedKeys","defaultSelected","lineHeight","key","disabled","onSearch","value","width","removeAlertMessage","description","closable","onClose","Content","Text","Navbar","Login","newsList","itemLayout","size","pagination","onChange","page","pageSize","dataSource","renderItem","item","index","noborder","borderBottomColor","borderBottomWidth","extra","alt","src","urlToImage","Meta","title","content","DemoBox","children","colSpanValues","history","useHistory","getNewsList","flat","splice","map","eachNewsListItem","sm","span","xs","md","lg","setTimeout","push","justify","align","gutter","MainPage","handleImageNotDisplayed","articles","filter","this","orientation","GetNews","Footer","textAlign","Component","ProfileFormComponent","initialValue","email","match","updateUserProfile","profile","DummyProfileImage","Profile","rest","render","location","pathname","from","Root","exact","path","Main","Story","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,yC,0PCA9BC,EAAY,CACvBC,oBAAqB,sBACrBC,cAAe,gBACfC,YAAa,cAEbC,QAAS,UAGEC,EAAY,CACvBC,6BAA8B,gCAC9BC,eAAgB,iBAChBC,UAAW,YACXC,YAAa,cACbC,eAAgB,kBAGLC,EAAY,CACvBC,iBAAkB,mBAClBC,mBAAoB,sB,yjBCcPC,MA9Bf,WAA0C,IAArBC,EAAoB,uDAAZ,GAAIC,EAAQ,uCACvC,OAAQA,EAAOC,MACb,KAAKjB,EAAUC,oBACb,OAAO,EAAP,GAAYc,EAAZ,CAAmBG,MAAOF,EAAOE,QACnC,KAAKlB,EAAUG,YACb,OAAO,EAAP,GACKY,EADL,CAEEI,MAAO,wCAEX,KAAKd,EAAUE,eAEf,KAAKF,EAAUC,6BACb,OAAO,EAAP,GAAYS,EAAZ,CAAmBK,UAAWJ,EAAOK,UACvC,KAAKhB,EAAUG,UACb,OAAO,EAAP,GAAYO,EAAZ,CAAmBO,MAAON,EAAOM,QACnC,KAAKjB,EAAUI,YACb,OAAO,EAAP,GAAYM,EAAZ,CAAmBQ,KAAMP,EAAOO,OAClC,KAAKlB,EAAUK,eACb,OAAO,EAAP,GAAYK,EAAZ,CAAmBQ,KAAMP,EAAOK,UAClC,KAAKV,EAAUC,iBACb,OAAO,EAAP,GAAYG,EAAZ,CAAmBI,MAAOH,EAAOG,QACnC,KAAKR,EAAUE,mBACb,OAAO,EAAP,GAAYE,EAAZ,CAAmBI,WAAOK,IAC5B,KAAKxB,EAAUI,QACb,MAAO,GACT,QACE,OAAOW,ICtBb,IAAMU,EAAiBC,OAAOC,sCAAwCC,IAEhEC,EAAQC,YACZhB,ECAO,WACL,IACE,IAAMiB,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EAA0B,OAC9B,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GAEP,YADAC,QAAQC,IAAIF,IDLhBG,GACAd,EAAee,YAAgBC,OAGjCZ,EAAMa,WAAU,kBCdT,SAA4B3B,GAC/B,IACE,IAAMgB,EAAkBG,KAAKS,UAAU5B,GACvCiB,aAAaY,QAAQ,QAASb,GAC9B,MAAOK,GACPC,QAAQC,IAAIF,IDSIS,CAAmBhB,EAAMiB,eAChCjB,Q,6IEbfkB,IAAMC,SAASC,QAAU,0BAsBlB,IAAMC,EAAoB,CAC/BC,gBArBF,SAAyBC,EAAqBlC,GAC5C,OAAO6B,IACJM,IADI,iCAC0BD,EAD1B,mBACwDlC,IAC5DoC,MAAK,SAAAC,GACJ,OAAOA,EAASC,SAkBpBC,cAdF,SAAuBC,EAASxC,GAC9B,OAAO6B,IACJM,IADI,wBACiBK,EADjB,mBACmCxC,IACvCoC,MAAK,SAAAC,GACJ,OAAOA,EAASC,SAWpBG,OAPF,WACE3B,aAAa4B,UClBR,SAASC,EAAMC,GACpB,OAAO,SAASC,GAahB,IAAiBC,EAGA7C,EAff4C,GAYeC,EAZE,kBAaV,CAAE/C,KAAMjB,EAAUE,cAAe8D,aAZxC,IACED,EAAS,CACP9C,KAAMjB,EAAUC,oBAChBiB,MAAO4C,EAAa5C,QAEtB6C,EAwBC,SAAwBD,GAC7B,MAAO,CACL7C,KAAMZ,EAAUI,YAChBc,KAAMuC,GA3BKG,CAAeH,IACxB,MAAOI,GACP7B,QAAQC,IAAI,cAAe4B,GAC3BH,GAMa5C,EANI+C,EAOZ,CAAEjD,KAAMjB,EAAUG,YAAagB,aAQnC,SAASgD,EAAcH,GAC5B,MAAO,CAAE/C,KAAMN,EAAUC,iBAAkBO,MAAO6C,GAY7C,SAASI,EAAS9C,GACvB,MAAO,CAAEL,KAAMZ,EAAUG,UAAWc,MAAOA,GAKtC,SAAS6B,EAAgBC,EAAqBiB,GACnD,OAAO,SAASN,GACdb,EACGC,gBAAgBC,EAAqBiB,GACrCf,MAAK,SAAAE,GACJO,EAAS,CACP9C,KAAMZ,EAAUC,6BAChBe,QAASmC,OAGZc,OAAM,SAAAJ,GACLH,EAASI,EACP,gGAKH,SAASV,EAAcC,EAASxC,GACrC,OAAO,SAAS6C,GACdb,EAAkBO,cAAcC,EAASxC,GAAOoC,MAAK,SAAAE,GACnDO,EAAS,CACP9C,KAAMZ,EAAUE,eAChBc,QAASmC,QCVjB,IAAMe,EAAqB,IAAKC,OAAO,CAAEC,KAAM,gBAApB,EAvD3B,SAAmBC,GAAQ,IACjBC,EAAsBD,EAAME,KAA5BD,kBACAE,EAFgB,IAEhBA,MAUR,OACE,yBAAKC,UAAU,cACb,kBAACD,EAAD,CAAOE,MAAO,EAAGD,UAAU,oBAA3B,2BAGA,sBAAME,KAAN,KACGL,EAAkB,QAAS,CAC1BM,MAAO,CACL,CACEC,UAAU,EACVlB,QAAS,4BAJdW,CAOE,uBAAOQ,YAAY,uBAExB,sBAAMH,KAAN,KACGL,EAAkB,QAAS,CAC1BM,MAAO,CACL,CACEC,UAAU,EACVlB,QAAS,4BAJdW,CAOE,uBAAOQ,YAAY,uBAExB,uBAAQlE,KAAK,UAAU6D,UAAU,SAASM,QAlCzB,SAAAhD,GACnBA,EAAEiD,iBACFX,EAAME,KAAKU,gBAAe,SAACpB,EAAKqB,GACzBrB,IACHQ,EAAMb,MAAM0B,EAAQ,MACpBb,EAAMvB,gBAAgB,KAAMoC,EAAOrE,aA6BrC,SAGA,sBAAM8D,KAAN,KACE,iDACsB,IACpB,uBACEQ,KAAK,+BACLC,IAAI,sBACJC,OAAO,UAHT,kBAqBKC,mBAPf,SAAyB5E,GACvB,MAAO,CACLG,MAAOH,EAAMG,MACbE,UAAWL,EAAMK,aAImB,CACtCyC,QACAM,gBACAhB,mBAHawC,CAIZpB,G,iBCnEKqB,E,IAAAA,OACAC,E,IAAAA,OA2DOF,mBANf,SAAyB5E,GACvB,MAAO,CACLG,MAAOH,EAAMG,SAIuB,CAAE2C,QAAOF,OF1C1C,WAEL,OADAT,EAAkBS,SACX,CAAE1C,KAAMjB,EAAUI,UEwC8BqD,iBAA1CkC,EAzDf,SAAyBjB,GACvB,OACE,kBAACkB,EAAD,CACEE,MAAO,CACLC,gBAAiB,SACjBC,aAAc,oBACdC,QAAS,OACTC,eAAgB,kBAGlB,6BACE,kBAAC,IAAD,CAAMC,GAAG,QAAQL,MAAO,CAAEM,MAAO,wBAC/B,8CAGJ,uBACEC,MAAM,QACNC,KAAK,aACLC,oBAAqB,CAAC7B,EAAM8B,iBAC5BV,MAAO,CAAEW,WAAY,OAAQL,MAAO,wBAEpC,sBAAMpB,KAAN,CAAW0B,IAAI,KACb,kBAAC,IAAD,CAAMP,GAAG,SAAT,SAEDzB,EAAMzD,KACL,sBAAM+D,KAAN,CAAW2B,UAAQ,GACjB,kBAACd,EAAD,CACEV,YAAY,oBACZyB,SAAU,SAAAC,GAAK,OAAInC,EAAMjB,cAAcoD,EAAOnC,EAAMxD,QACpD4E,MAAO,CAAEgB,MAAO,OACf,KAEH,KACJ,sBAAM9B,KAAN,CAAW0B,IAAI,KACb,kBAAC,IAAD,CAAMP,GAAG,YAAT,YAEF,sBAAMnB,KAAN,CACE0B,IAAI,IACJtB,QAAS,SAAAhD,GACc,YAAjBsC,EAAM1D,QACR0D,EAAMf,WAITe,EAAM1D,a,kBCzBF2E,mBANf,SAAyB5E,GACvB,MAAO,CACLI,MAAOJ,EAAMI,SAIuB,CAAE4F,mBHInC,WACL,MAAO,CAAE9F,KAAMN,EAAUE,sBGLZ8E,EAvBf,SAA+BjB,GAI7B,OAAOA,EAAMvD,MACX,6BACE,uBACE6F,YAAatC,EAAMvD,MACnBF,KAAK,QACLgG,UAAQ,EACRnC,UAAU,gBACVoC,QAVU,SAAA9E,GAChBsC,EAAMqC,yBAYF,QCPEI,G,WAAAA,SACAtC,E,IAAAA,MAAOuC,E,IAAAA,KAsCAzB,mBAPf,SAAyB5E,GACvB,MAAO,CACLG,MAAOH,EAAMG,MACbE,UAAWL,EAAMK,aAImB,KAAzBuE,EApCf,SAAmBjB,GACjB,OAAOA,EAAMxD,OAASwD,EAAMtD,UAC1B,kBAAC,IAAD,CAAU+E,GAAG,UAEb,uBAAQrB,UAAU,UAChB,kBAACuC,EAAD,CAAiBb,gBAAgB,IAAIxF,OAAO,WAC5C,yBAAK8D,UAAU,oBACb,kBAAC,EAAD,MACA,kBAACqC,EAAD,CAASrC,UAAU,iBACjB,uBAAMA,UAAU,cACd,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAOC,MAAO,EAAGD,UAAU,kBAA3B,mCAGA,kBAACsC,EAAD,wHAKF,yBAAKtC,UAAU,cACb,kBAACwC,EAAD,c,yFCaC3B,mBAAQ,KAAM,CAAEvB,YAAhBuB,EA1Cf,SAAqBjB,GACnB,OAAOA,EAAM6C,SACX,wBACEC,WAAW,WACXC,KAAK,QACLC,WAAY,CACVC,SAAU,SAAAC,GACRvF,QAAQC,IAAIsF,IAEdC,SAAU,GAEZC,WAAYpD,EAAM6C,SAClBQ,WAAY,SAACC,EAAMC,GAAP,OACV,uBAAMjD,KAAN,CACE0B,IAAKuB,EACLC,SAAS,OACTpC,MAAO,CACLqC,kBAAmB,cACnBC,kBAAmB,GAErBC,MAAO,yBAAKvB,MAAO,IAAKwB,IAAI,OAAOC,IAAKP,EAAKQ,cAE7C,uBAAMxD,KAAKyD,KAAX,CACEC,MACE,kBAAC,IAAD,CACEvC,GAAG,SACHf,QAAS,SAAAhD,GACPsC,EAAMN,SAAS4D,KAHnB,OAMOA,EAAKU,OAGd1B,YAAagB,EAAKhB,cAEnBgB,EAAKW,YAIV,Q,oCCtCE9D,G,IAAAA,MAAOuC,G,IAAAA,KAETwB,GAAU,SAAAlE,GAAK,OACnB,uBAAGI,UAAS,iBAAYJ,EAAMmC,QAAUnC,EAAMmE,WAG1CC,GAAgB,CAAC,EAAG,GAAI,GAkDfnD,mBAAQ,KAAM,CAAEvB,YAAhBuB,EAjDf,SAAiBjB,GACf,IAAIqE,EAAUC,cACRC,EAAcvE,EAAM6C,SACtB7C,EAAM6C,SACH2B,OACAC,OAAO,EAAG,GACVC,KAAI,SAACC,EAAkBpB,GAAnB,OACH,wBACEqB,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IACZE,GAAI,CAAEF,KAAMtB,EAAQ,EAAIa,GAAcb,GAAS,EAAIA,GACnDyB,GAAI,CAAEH,KAAMtB,EAAQ,EAAIa,GAAcb,GAAS,EAAIA,GACnDnD,UAAU,wBACV4B,IAAKuB,GAEL,kBAAC,GAAD,KACE,yBAAKM,IAAKc,EAAiBb,WAAYF,IAAI,eAE7C,kBAAC,GAAD,CACEvD,MAAO,EACPD,UAAU,QACVM,QAAS,SAAAhD,GACPsC,EAAMN,SAASiF,GACfM,WAAWZ,EAAQa,KAAK,UAAW,OAGpCP,EAAiBX,OAEpB,kBAAC,GAAD,KAAOW,EAAiBrC,iBAG9B,KAEJ,OAAOtC,EAAM6C,SACX,6BACE,wBACEtG,KAAK,OACL4I,QAAQ,gBACRC,MAAM,MACNC,OAAQ,CAAC,CAAEP,GAAI,EAAGF,GAAI,GAAIG,GAAI,GAAIC,GAAI,IAAM,KAE3CT,IAIL,kBAAC,IAAD,CAAU9C,GAAG,SChDX6D,G,YACJ,WAAYtF,GAAQ,IAAD,8BACjB,4CAAMA,KAERuF,wBAA0B,SAAA7I,GACxB,GAAIA,EAMF,OALaA,EAAU8I,SAASC,QAAO,SAAAnC,GACrC,GAAwB,OAApBA,EAAKQ,WACP,OAAOR,MAPI,E,sEAcjB,OAAOoC,KAAK1F,MAAMxD,OAASkJ,KAAK1F,MAAMtD,UACpC,yBAAK0D,UAAU,aACb,kBAACuC,EAAD,CACEb,gBAAgB,IAChBvF,KAAK,kBACLD,OAAO,YAET,yBAAK8D,UAAU,qBACb,kBAAC,GAAD,CACEyC,SAAU6C,KAAKH,wBAAwBG,KAAK1F,MAAMtD,aAEnDgJ,KAAK1F,MAAMtD,UACV,uBAASiJ,YAAY,SAArB,kBACE,KACJ,yBAAKvF,UAAU,aACb,yBAAKA,UAAU,kBACb,kBAACwF,GAAD,CACE/C,SAAU6C,KAAKH,wBAAwBG,KAAK1F,MAAMtD,gBAK1D,sBAAQmJ,OAAR,CACEzE,MAAO,CACL0E,UAAW,SACXpE,MAAO,QACPL,gBAAiB,YAJrB,sDAWF,kBAAC,IAAD,CAAUI,GAAG,U,GAhDIsE,aA4DR9E,oBAPf,SAAyB5E,GACvB,MAAO,CACLG,MAAOH,EAAMG,MACbE,UAAWL,EAAMK,aAImB,CAAE+B,kBAAiBM,iBAA5CkC,CACbqE,I,qBCPF,IAAMU,GAAuB,IAAKlG,OAAO,CAAEC,KAAM,gBAApB,EA5D7B,SAAqBC,GAAQ,IACnBC,EAAsBD,EAAME,KAA5BD,kBACAE,EAFkB,IAElBA,MAUR,OACE,6BACE,kBAACA,EAAD,CAAOE,MAAO,GAAd,0BACA,sBAAMC,KAAN,KACGL,EAAkB,OAAQ,CACzBgG,aAAcjG,EAAMnD,KAAKqJ,MAAQlG,EAAMnD,KAAKqJ,MAAMC,MAAM,YAAY,GAAI,GACxE5F,MAAO,CACL,CACEC,UAAU,EACVlB,QAAS,2BALdW,CAQE,uBAAOQ,YAAY,sBAExB,sBAAMH,KAAN,KACGL,EAAkB,QAAS,CAC1BgG,aAAcjG,EAAMnD,KAAKqJ,MACzB3F,MAAO,CACL,CACEC,UAAU,EACVlB,QAAS,4BALdW,CAQE,uBAAOQ,YAAY,uBAExB,sBAAMH,KAAN,KACGL,EAAkB,QAAS,CAC1BgG,aAAcjG,EAAMnD,KAAKL,MACzB+D,MAAO,CACL,CACEC,UAAU,EACVlB,QAAS,4BALdW,CAQE,uBAAOQ,YAAY,uBAExB,uBAAQlE,KAAK,UAAU6D,UAAU,SAASM,QA7CzB,SAAAhD,GACnBA,EAAEiD,iBACFX,EAAME,KAAKU,gBAAe,SAACpB,EAAKqB,GAC9BlD,QAAQC,IAAI,gBACP4B,GACHQ,EAAMoG,kBAAkBvF,QAwC1B,cAcSI,gBARf,SAAyB5E,GACvB,MAAO,CACLQ,KAAMR,EAAMQ,QAMwB,CAAEuJ,kBRtBnC,SAA2BC,GAChC,MAAO,CAAE9J,KAAMZ,EAAUK,eAAgBW,QAAS0J,KQqBrCpF,CACb+E,IC3DM7F,I,WAAAA,OAAOuC,G,IAAAA,KAmEAzB,oBARf,SAAyB5E,GACvB,MAAO,CACLG,MAAOH,EAAMG,MACbK,KAAMR,EAAMQ,KACZH,UAAWL,EAAMK,aAImB,KAAzBuE,EAjEf,SAAiBjB,GACf,OAAOA,EAAMxD,OAASwD,EAAMtD,UAC1B,6BACE,kBAACiG,EAAD,CAAiBrG,OAAO,YACxB,yBAAK8D,UAAU,gBACb,wBAAKiF,OAAQ,CAAC,CAAEP,GAAI,EAAGF,GAAI,GAAIG,GAAI,GAAIC,GAAI,IAAM,KAC/C,wBACE5E,UAAU,aACVwE,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IACZE,GAAI,CAAEF,KAAM,GACZG,GAAI,CAAEH,KAAM,IAEZ,yBAAKzE,UAAU,cACb,uBAAMA,UAAU,gBACd,yBAAKyD,IAAKyC,KAAmB1C,IAAI,gBACjC,kBAAC,GAAD,CAAOvD,MAAO,GAAd,gBACA,6BACGL,EAAMnD,KAAKkD,KACV,6BACE,yCADF,IACyB,6BACvB,kBAAC,GAAD,KAAOC,EAAMnD,KAAKkD,MAClB,8BAEA,KACJ,0CARF,IAQ0B,6BACxB,kBAAC,GAAD,KAAOC,EAAMnD,KAAKqJ,OAClB,6BACA,0CACA,6BACA,kBAAC,GAAD,CAAM3J,KAAK,aAAayD,EAAMnD,KAAKL,OACnC,iCAKR,wBACE4D,UAAU,aACVwE,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IACZE,GAAI,CAAEF,KAAM,IACZG,GAAI,CAAEH,KAAM,KAEZ,yBAAKzE,UAAU,cACb,uBAAMA,UAAU,gBACd,kBAACmG,GAAD,YAQZ,kBAAC,IAAD,CAAU9E,GAAG,S,OCzBFR,oBAPf,SAAyB5E,GACvB,MAAO,CACLG,MAAOH,EAAMG,MACbI,MAAOP,EAAMO,SAIuB,KAAzBqE,EAhCf,SAAmBjB,GACjB,OAAOA,EAAMxD,OAASwD,EAAMpD,MAC1B,6BACE,kBAAC+F,EAAD,CAAiBrG,OAAO,YACxB,yBAAK8D,UAAU,cACb,gCAAMJ,EAAMpD,MAAMoH,OAClB,2BAAIhE,EAAMpD,MAAM0F,aAChB,6BAAK,yBAAKuB,IAAK7D,EAAMpD,MAAMkH,WAAYF,IAAI,eAC3C,2BAAI5D,EAAMpD,MAAMqH,UAElB,sBAAQ4B,OAAR,CACIzE,MAAO,CACL0E,UAAW,SACXpE,MAAO,QACPL,gBAAiB,YAJvB,sDAWF,kBAAC,IAAD,CAAUI,GAAG,S,UCEFR,oBANf,SAAyB5E,GACvB,MAAO,CACLG,MAAOH,EAAMG,SAIuB,KAAzByE,EA1Bf,YAA8C,IAAtBkD,EAAqB,EAArBA,SAAaqC,EAAQ,6BAC3C,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACNF,EAAKhK,MACH2H,EAEA,kBAAC,IAAD,CACE1C,GAAI,CACFkF,SAAU,IACVtK,MAAO,CAAEuK,KAAMF,aCoBdG,GAzBF,SAAC,GAAD,IAAG1J,EAAH,EAAGA,MAAH,OACX,kBAAC,IAAD,CAAUA,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2J,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,GAAD,CAAcA,KAAK,SACjB,kBAACC,GAAD,OAEF,kBAAC,GAAD,CAAcD,KAAK,UACjB,kBAACE,GAAD,OAEF,kBAAC,GAAD,CAAcF,KAAK,YACjB,kBAAC,GAAD,W,OCZUG,QACW,cAA7BlK,OAAO0J,SAASS,UAEe,UAA7BnK,OAAO0J,SAASS,UAEhBnK,OAAO0J,SAASS,SAAShB,MACvB,2DCRNiB,IAASX,OAAO,kBAAC,GAAD,CAAMtJ,MAAOA,IAAWkK,SAASC,eAAe,SDuH1D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7I,MAAK,SAAA8I,GACjCA,EAAaC,kB","file":"static/js/main.40711417.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_pic.d8e66e15.png\";","export const authTypes = {\r\n  LOGIN_AUTHENTICATED: 'LOGIN_AUTHENTICATED',\r\n  LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n  LOGIN_ERROR: 'LOGIN_ERROR',\r\n\r\n  LOG_OUT: 'LOGOUT'\r\n};\r\n\r\nexport const newsTypes = {\r\n  GET_TOP_HEADLINES_BY_COUNTRY: ' GET_TOP_HEADLINES_BY_COUNTRY',\r\n  GET_EVERYTHING: 'GET_EVERYTHING',\r\n  GET_STORY: 'GET_STORY',\r\n  GET_PROFILE: 'GET_PROFILE',\r\n  UPDATE_PROFILE: 'UPDATE_PROFILE'\r\n};\r\n\r\nexport const alertType = {\r\n  ALERT_ERROR_SHOW: 'ALERT_ERROR_SHOW',\r\n  ALERT_ERROR_REMOVE: 'ALERT_ERROR_REMOVE'\r\n};\r\n","import { authTypes, newsTypes, alertType } from '../_constants';\r\n\r\nfunction rootReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case authTypes.LOGIN_AUTHENTICATED:\r\n      return { ...state, token: action.token };\r\n    case authTypes.LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        error: 'Seems your name or token is invalid'\r\n      };\r\n    case newsTypes.GET_EVERYTHING:\r\n      return { ...state, headlines: action.payload };\r\n    case newsTypes.GET_TOP_HEADLINES_BY_COUNTRY:\r\n      return { ...state, headlines: action.payload };\r\n    case newsTypes.GET_STORY:\r\n      return { ...state, story: action.story };\r\n    case newsTypes.GET_PROFILE:\r\n      return { ...state, user: action.user };\r\n    case newsTypes.UPDATE_PROFILE:\r\n      return { ...state, user: action.payload };\r\n    case alertType.ALERT_ERROR_SHOW:\r\n      return { ...state, error: action.error };\r\n    case alertType.ALERT_ERROR_REMOVE:\r\n      return { ...state, error: undefined };\r\n    case authTypes.LOG_OUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from '../_reducers/index';\r\nimport { saveToLocalStorage, loadFromLocalStorage } from './persist';\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  loadFromLocalStorage(),\r\n  storeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\nexport default store;\r\n","export function saveToLocalStorage(state) {\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem('state', serializedState);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  export function loadFromLocalStorage() {\r\n    try {\r\n      const serializedState = localStorage.getItem('state');\r\n      if (serializedState === null) return undefined;\r\n      return JSON.parse(serializedState);\r\n    } catch (e) {\r\n      console.log(e);\r\n      return undefined;\r\n    }\r\n  }\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://newsapi.org/v2/';\r\n\r\nfunction getTopHeadlines(countryAbbreviation, token) {\r\n  return axios\r\n    .get(`/top-headlines?country=${countryAbbreviation}&apiKey=${token}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nfunction getEverything(request, token) {\r\n  return axios\r\n    .get(`/everything?q=${request}&apiKey=${token}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nfunction logout() {\r\n  localStorage.clear();\r\n}\r\n\r\nexport const apiRequestService = {\r\n  getTopHeadlines,\r\n  getEverything,\r\n  logout\r\n};\r\n","import { authTypes, newsTypes, alertType } from '../_constants';\r\nimport { apiRequestService } from '../_services/api/requests';\r\n\r\nexport function login(loginDetails) {\r\n  return function(dispatch) {\r\n    dispatch(request('login requested'));\r\n    try {\r\n      dispatch({\r\n        type: authTypes.LOGIN_AUTHENTICATED,\r\n        token: loginDetails.token\r\n      });\r\n      dispatch(getUserProfile(loginDetails));\r\n    } catch (err) {\r\n      console.log('Error login', err);\r\n      dispatch(failure(err));\r\n    }\r\n  };\r\n  function request(message) {\r\n    return { type: authTypes.LOGIN_REQUEST, message };\r\n  }\r\n  function failure(error) {\r\n    return { type: authTypes.LOGIN_ERROR, error };\r\n  }\r\n}\r\nexport function logout() {\r\n  apiRequestService.logout();\r\n  return { type: authTypes.LOG_OUT };\r\n}\r\n\r\nexport function getAlertError(message) {\r\n  return { type: alertType.ALERT_ERROR_SHOW, error: message };\r\n}\r\nexport function removeAlertMessage() {\r\n  return { type: alertType.ALERT_ERROR_REMOVE };\r\n}\r\nexport function getUserProfile(loginDetails) {\r\n  return {\r\n    type: newsTypes.GET_PROFILE,\r\n    user: loginDetails\r\n  };\r\n}\r\n\r\nexport function getStory(story) {\r\n  return { type: newsTypes.GET_STORY, story: story };\r\n}\r\nexport function updateUserProfile(profile) {\r\n  return { type: newsTypes.UPDATE_PROFILE, payload: profile };\r\n}\r\nexport function getTopHeadlines(countryAbbreviation, loginDetailsToken) {\r\n  return function(dispatch) {\r\n    apiRequestService\r\n      .getTopHeadlines(countryAbbreviation, loginDetailsToken)\r\n      .then(data => {\r\n        dispatch({\r\n          type: newsTypes.GET_TOP_HEADLINES_BY_COUNTRY,\r\n          payload: data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        dispatch(getAlertError(\r\n          'Oops! No response! Looks like you have an invalid token, email or no network connection'\r\n        ));\r\n      });\r\n  };\r\n}\r\nexport function getEverything(request, token) {\r\n  return function(dispatch) {\r\n    apiRequestService.getEverything(request, token).then(data => {\r\n      dispatch({\r\n        type: newsTypes.GET_EVERYTHING,\r\n        payload: data\r\n      });\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Button, Form, Input, Typography } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { login, getAlertError, getTopHeadlines } from '../../_actions/index';\r\n\r\nfunction LoginForm(props) {\r\n  const { getFieldDecorator } = props.form;\r\n  const { Title } = Typography;\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        props.login(values, 'us');\r\n        props.getTopHeadlines('us', values.token);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <Title level={4} className=\"login-form-title\">\r\n        Sign in to see top news\r\n      </Title>\r\n      <Form.Item>\r\n        {getFieldDecorator('email', {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: 'Your email is required'\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Enter your email\" />)}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator('token', {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: 'Your token is required'\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Enter your token\" />)}\r\n      </Form.Item>\r\n      <Button type=\"primary\" className=\"button\" onClick={handleSubmit}>\r\n        Login\r\n      </Button>\r\n      <Form.Item>\r\n        <p>\r\n          Don't have a token?{' '}\r\n          <a\r\n            href=\"https://newsapi.org/register\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            Get here\r\n          </a>\r\n        </p>\r\n      </Form.Item>\r\n    </div>\r\n  );\r\n}\r\nconst LoginFormComponent = Form.create({ name: 'dynamic_rule' })(LoginForm);\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    token: state.token,\r\n    headlines: state.headlines\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  login,\r\n  getAlertError,\r\n  getTopHeadlines\r\n})(LoginFormComponent);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Menu, Input } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { login, logout, getEverything } from '../_actions';\r\n\r\nconst { Header } = Layout;\r\nconst { Search } = Input;\r\n\r\nfunction NavbarComponent(props) {\r\n  return (\r\n    <Header\r\n      style={{\r\n        backgroundColor: 'white ',\r\n        borderBottom: '1px solid #e8e8e8',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n      }}\r\n    >\r\n      <div>\r\n        <Link to=\"/main\" style={{ color: 'rgba(0, 0, 0, 0.70)' }}>\r\n          <strong>MediaCom</strong>\r\n        </Link>\r\n      </div>\r\n      <Menu\r\n        theme=\"light\"\r\n        mode=\"horizontal\"\r\n        defaultSelectedKeys={[props.defaultSelected]}\r\n        style={{ lineHeight: '62px', color: 'rgba(0, 0, 0, 0.65)' }}\r\n      >\r\n        <Menu.Item key=\"1\">\r\n          <Link to=\"/main\">Main</Link>\r\n        </Menu.Item>\r\n        {props.type ? (\r\n          <Menu.Item disabled>\r\n            <Search\r\n              placeholder=\"Enter your search\"\r\n              onSearch={value => props.getEverything(value, props.token)}\r\n              style={{ width: 200 }}\r\n            />{' '}\r\n          </Menu.Item>\r\n        ) : null}\r\n        <Menu.Item key=\"2\">\r\n          <Link to=\"/profile\">Profile</Link>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"3\"\r\n          onClick={e => {\r\n            if (props.action === 'Log out') {\r\n              props.logout();\r\n            }\r\n          }}\r\n        >\r\n          {props.action}\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Header>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    token: state.token\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { login, logout, getEverything })(\r\n  NavbarComponent\r\n);\r\n","import React from 'react';\r\nimport { Alert } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { removeAlertMessage } from '../../_actions/index';\r\n\r\nfunction AlertMessageComponent(props) {\r\n  const onClose = e => {\r\n  props.removeAlertMessage();\r\n  };\r\n  return props.error ? (\r\n    <div>\r\n      <Alert\r\n        description={props.error}\r\n        type=\"error\"\r\n        closable\r\n        className=\"error-message\"\r\n        onClose={onClose}\r\n      />\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    error: state.error\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { removeAlertMessage })(\r\n  AlertMessageComponent\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Layout, Card, Typography } from 'antd';\r\n\r\nimport LoginFormComponent from '../../components/form/Login';\r\nimport NavbarComponent from '../../components/Navbar';\r\n\r\nimport AlertMessageComponent from '../../components/message/alert';\r\n\r\nimport './Login.scss';\r\n\r\nconst { Content } = Layout;\r\nconst { Title, Text } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  return props.token && props.headlines ? (\r\n    <Redirect to=\"/main\" />\r\n  ) : (\r\n    <Layout className=\"layout\">\r\n      <NavbarComponent defaultSelected=\"4\" action=\"Log in\" />\r\n      <div className=\"layout-container\">\r\n        <AlertMessageComponent />\r\n        <Content className=\"login-content\">\r\n          <Card className=\"login-card\">\r\n            <div className=\"left-grid\">\r\n              <Title level={3} className=\"left-grid-text\">\r\n                Search worldwide news with code\r\n              </Title>\r\n              <Text>\r\n                Get breaking news headlines, and search for articles from over\r\n                30,000 news sources and blogs with our news API\r\n              </Text>\r\n            </div>\r\n            <div className=\"right-grid\">\r\n              <LoginFormComponent />\r\n            </div>\r\n          </Card>\r\n        </Content>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    token: state.token,\r\n    headlines: state.headlines\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(LoginPage);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getStory } from '../../_actions';\r\nimport { List} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction GetNewsList(props) {\r\n  return props.newsList ? (\r\n    <List\r\n      itemLayout=\"vertical\"\r\n      size=\"large\"\r\n      pagination={{\r\n        onChange: page => {\r\n          console.log(page);\r\n        },\r\n        pageSize: 3\r\n      }}\r\n      dataSource={props.newsList}\r\n      renderItem={(item, index) => (\r\n        <List.Item\r\n          key={index}\r\n          noborder=\"true\"\r\n          style={{\r\n            borderBottomColor: 'transparent',\r\n            borderBottomWidth: 0\r\n          }}\r\n          extra={<img width={272} alt=\"news\" src={item.urlToImage} />}\r\n        >\r\n          <List.Item.Meta\r\n            title={\r\n              <Link\r\n                to=\"/story\"\r\n                onClick={e => {\r\n                  props.getStory(item);\r\n                }}\r\n              >\r\n                Home{item.title}\r\n              </Link>\r\n            }\r\n            description={item.description}\r\n          />\r\n          {item.content}\r\n        </List.Item>\r\n      )}\r\n    />\r\n  ) : null;\r\n}\r\n\r\nexport default connect(null, { getStory })(GetNewsList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Row, Typography, Col } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getStory } from '../../_actions';\r\nconst { Title, Text } = Typography;\r\n\r\nconst DemoBox = props => (\r\n  <p className={`height-${props.value}`}>{props.children}</p>\r\n);\r\n\r\nconst colSpanValues = [4, 12, 6];\r\nfunction Content(props) {\r\n  let history = useHistory();\r\n  const getNewsList = props.newsList\r\n    ? props.newsList\r\n        .flat()\r\n        .splice(1, 3)\r\n        .map((eachNewsListItem, index) => (\r\n          <Col\r\n            sm={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            md={{ span: index < 3 ? colSpanValues[index] : 2 + index }}\r\n            lg={{ span: index < 3 ? colSpanValues[index] : 2 + index }}\r\n            className=\"main-page-content-col\"\r\n            key={index}\r\n          >\r\n            <DemoBox>\r\n              <img src={eachNewsListItem.urlToImage} alt=\"news list\" />\r\n            </DemoBox>\r\n            <Title\r\n              level={3}\r\n              className=\"title\"\r\n              onClick={e => {\r\n                props.getStory(eachNewsListItem);\r\n                setTimeout(history.push('/story'), 100);\r\n              }}\r\n            >\r\n              {eachNewsListItem.title}\r\n            </Title>\r\n            <Text>{eachNewsListItem.description}</Text>\r\n          </Col>\r\n        ))\r\n    : null;\r\n\r\n  return props.newsList ? (\r\n    <div>\r\n      <Row\r\n        type=\"flex\"\r\n        justify=\"space-between\"\r\n        align=\"top\"\r\n        gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, 18]}\r\n      >\r\n        {getNewsList}\r\n      </Row>\r\n    </div>\r\n  ) : (\r\n    <Redirect to=\"/\" />\r\n  );\r\n}\r\n\r\nexport default connect(null, { getStory })(Content);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Divider, Layout } from 'antd';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport NavbarComponent from '../../components/Navbar';\r\nimport { getTopHeadlines, getEverything } from '../../_actions';\r\nimport './styles/main.scss';\r\nimport GetNewsList from '../../components/list/GetNews';\r\nimport ContentList from '../../components/list/Content';\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  handleImageNotDisplayed = headlines => {\r\n    if (headlines) {\r\n      let filter = headlines.articles.filter(item => {\r\n        if (item.urlToImage !== null) {\r\n          return item;\r\n        }\r\n      });\r\n      return filter;\r\n    }\r\n  };\r\n  render() {\r\n    return this.props.token && this.props.headlines ? (\r\n      <div className=\"main-page\">\r\n        <NavbarComponent\r\n          defaultSelected=\"1\"\r\n          type=\"withSearchInput\"\r\n          action=\"Log out\"\r\n        />\r\n        <div className=\"main-page-content\">\r\n          <ContentList\r\n            newsList={this.handleImageNotDisplayed(this.props.headlines)}\r\n          />\r\n          {this.props.headlines ? (\r\n            <Divider orientation=\"right\">More Headlines</Divider>\r\n          ) : null}\r\n          <div className=\"news-list\">\r\n            <div className=\"full-news-list\">\r\n              <GetNewsList\r\n                newsList={this.handleImageNotDisplayed(this.props.headlines)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Layout.Footer\r\n          style={{\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            backgroundColor: '#f6e6a3'\r\n          }}\r\n        >\r\n          MediaCom App ©2019 Created by Kadri Oluwagbemi\r\n        </Layout.Footer>\r\n      </div>\r\n    ) : (\r\n      <Redirect to=\"/\" />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    token: state.token,\r\n    headlines: state.headlines\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { getTopHeadlines, getEverything })(\r\n  MainPage\r\n);\r\n","import React from 'react';\r\nimport { Form, Input, Button, Typography } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { updateUserProfile } from '../../_actions';\r\n\r\nfunction ProfileForm(props) {\r\n  const { getFieldDecorator } = props.form;\r\n  const { Title } = Typography;\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.form.validateFields((err, values) => {\r\n      console.log('Update Value');\r\n      if (!err) {\r\n        props.updateUserProfile(values);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Title level={4}>Update profile details</Title>\r\n      <Form.Item>\r\n        {getFieldDecorator('name', {\r\n          initialValue: props.user.email ? props.user.email.match(/([^@]+)/i)[0]: '',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: 'Your name is required'\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Enter your name\" />)}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator('email', {\r\n          initialValue: props.user.email,\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: 'Your email is required'\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Enter your email\" />)}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator('token', {\r\n          initialValue: props.user.token,\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: 'Your token is required'\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Enter your token\" />)}\r\n      </Form.Item>\r\n      <Button type=\"primary\" className=\"button\" onClick={handleSubmit}>\r\n        Update\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user\r\n  };\r\n}\r\n\r\nconst ProfileFormComponent = Form.create({ name: 'dynamic_rule' })(ProfileForm);\r\n\r\nexport default connect(mapStateToProps, { updateUserProfile })(\r\n  ProfileFormComponent\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card, Row, Col, Typography } from 'antd';\r\nimport NavbarComponent from '../../components/Navbar';\r\nimport DummyProfileImage from '../../assets/profile_pic.png';\r\nimport ProfileFormComponent from '../../components/form/Profile.js';\r\nimport './styles/profile.scss';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction Profile(props) {\r\n  return props.token && props.headlines? (\r\n    <div>\r\n      <NavbarComponent action=\"Log out\" />\r\n      <div className=\"profile-page\">\r\n        <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, 18]}>\r\n          <Col\r\n            className=\"gutter-row\"\r\n            sm={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            md={{ span: 7 }}\r\n            lg={{ span: 7 }}\r\n          >\r\n            <div className=\"gutter-box\">\r\n              <Card className=\"profile-card\">\r\n                <img src={DummyProfileImage} alt=\"profile pic\" />\r\n                <Title level={3}>User profile</Title>\r\n                <div>\r\n                  {props.user.name ? (\r\n                    <div>\r\n                      <strong>Name:</strong> <br />\r\n                      <Text>{props.user.name}</Text>\r\n                      <br />\r\n                    </div>\r\n                  ) : null}\r\n                  <strong>Email:</strong> <br />\r\n                  <Text>{props.user.email}</Text>\r\n                  <br />\r\n                  <strong>Token:</strong>\r\n                  <br />\r\n                  <Text type=\"secondary\">{props.user.token}</Text>\r\n                  <br />\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n          <Col\r\n            className=\"gutter-row\"\r\n            sm={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            md={{ span: 17 }}\r\n            lg={{ span: 17 }}\r\n          >\r\n            <div className=\"gutter-box\">\r\n              <Card className=\"profile-card\">\r\n                <ProfileFormComponent />\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Redirect to=\"/\" />\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    token: state.token,\r\n    user: state.user,\r\n    headlines: state.headlines\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Profile);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Layout } from 'antd';\r\nimport NavbarComponent from '../../components/Navbar';\r\nimport './styles/story.scss';\r\n\r\nfunction StoryPage(props) {\r\n  return props.token && props.story ? (\r\n    <div>\r\n      <NavbarComponent action=\"Log out\" />\r\n      <div className=\"story-page\">\r\n        <h1> {props.story.title}</h1>\r\n        <p>{props.story.description}</p>\r\n        <div><img src={props.story.urlToImage} alt=\"news list\" /></div>\r\n        <p>{props.story.content}</p>\r\n      </div>\r\n      <Layout.Footer\r\n          style={{\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            backgroundColor: '#f6e6a3'\r\n          }}\r\n        >\r\n          MediaCom App ©2019 Created by Kadri Oluwagbemi\r\n        </Layout.Footer>\r\n    </div>\r\n  ) : (\r\n    <Redirect to='/'/>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    token: state.token,\r\n    story: state.story\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(StoryPage);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        rest.token ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    token: state.token\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(PrivateRoute);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport LoginPage from '../pages/public/Login';\r\nimport MainPage from '../pages/private/Main';\r\nimport ProfilePage from '../pages/private/Profile';\r\nimport StoryPage from '../pages/private/Story';\r\nimport PrivateRoute from './private';\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <LoginPage />\r\n        </Route>\r\n        <PrivateRoute path=\"/main\">\r\n          <MainPage />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/story\">\r\n          <StoryPage />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/profile\">\r\n          <ProfilePage />\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport store from './_store/index';\r\nimport Root from './routes/index';\r\n\r\nimport './index.scss';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Root store={store} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}